{"version":3,"file":"main.js","sources":["source/src/utils/RoomVisual.js","source/src/helpers/containers.js","source/src/helpers/findHarvesterParts.js","source/src/helpers/math.js","source/src/helpers/nameGenerator.js","source/src/constants.js","source/src/roles/multitasker.js","source/src/defense.js","source/src/architect.js","source/src/roles/miner.js","source/src/spawner.js","source/src/app.js"],"sourcesContent":["// Based on https://github.com/screepers/RoomVisual\r\n\r\n// Original colors\r\n// const colors = {\r\n//   gray: '#555555',\r\n//   light: '#AAAAAA',\r\n//   road: '#666',\r\n//   energy: '#FFE87B',\r\n//   power: '#F53547',\r\n//   dark: '#181818',\r\n//   outline: '#8FBB93',\r\n//   speechText: '#000000',\r\n//   speechBackground: '#2ccf3b'\r\n// }\r\n\r\nconst colors = {\r\n  gray: '#664444',\r\n  light: '#AAAAAA',\r\n  road: '#966',\r\n  energy: '#FFE87B',\r\n  power: '#F53547',\r\n  dark: '#381818',\r\n  outline: '#AFBB93',\r\n  speechText: '#000000',\r\n  speechBackground: '#2ccf3b'\r\n}\r\n\r\nconst speechSize = 0.5\r\nconst speechFont = 'Times New Roman'\r\nfunction calculateFactoryLevelGapsPoly() {\r\n  let x = -0.08;\r\n  let y = -0.52;\r\n  let result = [];\r\n\r\n  let gapAngle = 16 * (Math.PI / 180);\r\n  let c1 = Math.cos(gapAngle);\r\n  let s1 = Math.sin(gapAngle);\r\n\r\n  let angle = 72 * (Math.PI / 180);\r\n  let c2 = Math.cos(angle);\r\n  let s2 = Math.sin(angle);\r\n\r\n  for (let i = 0; i < 5; ++i) {\r\n    result.push([0.0, 0.0]);\r\n    result.push([x, y]);\r\n    result.push([x * c1 - y * s1, x * s1 + y * c1]);\r\n    let tmpX = x * c2 - y * s2;\r\n    y = x * s2 + y * c2;\r\n    x = tmpX;\r\n  }\r\n  return result;\r\n}\r\nconst factoryLevelGaps = calculateFactoryLevelGapsPoly();\r\n\r\nRoomVisual.prototype.structure = function (x, y, type, opts = {}) {\r\n  opts = Object.assign({\r\n    opacity: 1\r\n  }, opts)\r\n  switch (type) {\r\n    case STRUCTURE_FACTORY: {\r\n      const outline = [\r\n        [-0.68, -0.11],\r\n        [-0.84, -0.18],\r\n        [-0.84, -0.32],\r\n        [-0.44, -0.44],\r\n        [-0.32, -0.84],\r\n        [-0.18, -0.84],\r\n        [-0.11, -0.68],\r\n\r\n        [0.11, -0.68],\r\n        [0.18, -0.84],\r\n        [0.32, -0.84],\r\n        [0.44, -0.44],\r\n        [0.84, -0.32],\r\n        [0.84, -0.18],\r\n        [0.68, -0.11],\r\n\r\n        [0.68, 0.11],\r\n        [0.84, 0.18],\r\n        [0.84, 0.32],\r\n        [0.44, 0.44],\r\n        [0.32, 0.84],\r\n        [0.18, 0.84],\r\n        [0.11, 0.68],\r\n\r\n        [-0.11, 0.68],\r\n        [-0.18, 0.84],\r\n        [-0.32, 0.84],\r\n        [-0.44, 0.44],\r\n        [-0.84, 0.32],\r\n        [-0.84, 0.18],\r\n        [-0.68, 0.11]\r\n      ];\r\n      this.poly(outline.map(p => [p[0] + x, p[1] + y]), {\r\n        fill: null,\r\n        stroke: colors.outline,\r\n        strokeWidth: 0.05,\r\n        opacity: opts.opacity\r\n      });\r\n      // outer circle\r\n      this.circle(x, y, {\r\n        radius: 0.65,\r\n        fill: '#232323',\r\n        strokeWidth: 0.035,\r\n        stroke: '#140a0a',\r\n        opacity: opts.opacity\r\n      });\r\n      const spikes = [\r\n        [-0.4, -0.1],\r\n        [-0.8, -0.2],\r\n        [-0.8, -0.3],\r\n        [-0.4, -0.4],\r\n        [-0.3, -0.8],\r\n        [-0.2, -0.8],\r\n        [-0.1, -0.4],\r\n\r\n        [0.1, -0.4],\r\n        [0.2, -0.8],\r\n        [0.3, -0.8],\r\n        [0.4, -0.4],\r\n        [0.8, -0.3],\r\n        [0.8, -0.2],\r\n        [0.4, -0.1],\r\n\r\n        [0.4, 0.1],\r\n        [0.8, 0.2],\r\n        [0.8, 0.3],\r\n        [0.4, 0.4],\r\n        [0.3, 0.8],\r\n        [0.2, 0.8],\r\n        [0.1, 0.4],\r\n\r\n        [-0.1, 0.4],\r\n        [-0.2, 0.8],\r\n        [-0.3, 0.8],\r\n        [-0.4, 0.4],\r\n        [-0.8, 0.3],\r\n        [-0.8, 0.2],\r\n        [-0.4, 0.1]\r\n      ];\r\n      this.poly(spikes.map(p => [p[0] + x, p[1] + y]), {\r\n        fill: colors.gray,\r\n        stroke: '#140a0a',\r\n        strokeWidth: 0.04,\r\n        opacity: opts.opacity\r\n      });\r\n      // factory level circle\r\n      this.circle(x, y, {\r\n        radius: 0.54,\r\n        fill: '#302a2a',\r\n        strokeWidth: 0.04,\r\n        stroke: '#140a0a',\r\n        opacity: opts.opacity\r\n      });\r\n      this.poly(factoryLevelGaps.map(p => [p[0] + x, p[1] + y]), {\r\n        fill: '#140a0a',\r\n        stroke: null,\r\n        opacity: opts.opacity\r\n      });\r\n      // inner black circle\r\n      this.circle(x, y, {\r\n        radius: 0.42,\r\n        fill: '#140a0a',\r\n        opacity: opts.opacity\r\n      });\r\n      this.rect(x - 0.24, y - 0.24, 0.48, 0.48, {\r\n        fill: '#3f3f3f',\r\n        opacity: opts.opacity\r\n      });\r\n      break;\r\n    }\r\n    case STRUCTURE_EXTENSION:\r\n      this.circle(x, y, {\r\n        radius: 0.5,\r\n        fill: colors.dark,\r\n        stroke: colors.outline,\r\n        strokeWidth: 0.05,\r\n        opacity: opts.opacity\r\n      })\r\n      this.circle(x, y, {\r\n        radius: 0.35,\r\n        fill: colors.gray,\r\n        opacity: opts.opacity\r\n      })\r\n      break\r\n    case STRUCTURE_SPAWN:\r\n      this.circle(x, y, {\r\n        radius: 0.65,\r\n        fill: colors.dark,\r\n        stroke: '#CCCCCC',\r\n        strokeWidth: 0.10,\r\n        opacity: opts.opacity\r\n      })\r\n      this.circle(x, y, {\r\n        radius: 0.40,\r\n        fill: colors.energy,\r\n        opacity: opts.opacity\r\n      })\r\n\r\n      break;\r\n    case STRUCTURE_POWER_SPAWN:\r\n      this.circle(x, y, {\r\n        radius: 0.65,\r\n        fill: colors.dark,\r\n        stroke: colors.power,\r\n        strokeWidth: 0.10,\r\n        opacity: opts.opacity\r\n      })\r\n      this.circle(x, y, {\r\n        radius: 0.40,\r\n        fill: colors.energy,\r\n        opacity: opts.opacity\r\n      })\r\n      break;\r\n    case STRUCTURE_LINK:\r\n      {\r\n        let osize = 0.3\r\n        let isize = 0.2\r\n        let outer = [\r\n          [0.0, -0.5],\r\n          [0.4, 0.0],\r\n          [0.0, 0.5],\r\n          [-0.4, 0.0]\r\n        ]\r\n        let inner = [\r\n          [0.0, -0.3],\r\n          [0.25, 0.0],\r\n          [0.0, 0.3],\r\n          [-0.25, 0.0]\r\n        ]\r\n        outer = relPoly(x, y, outer)\r\n        inner = relPoly(x, y, inner)\r\n        outer.push(outer[0])\r\n        inner.push(inner[0])\r\n        this.poly(outer, {\r\n          fill: colors.dark,\r\n          stroke: colors.outline,\r\n          strokeWidth: 0.05,\r\n          opacity: opts.opacity\r\n        })\r\n        this.poly(inner, {\r\n          fill: colors.gray,\r\n          stroke: false,\r\n          opacity: opts.opacity\r\n        })\r\n        break;\r\n      }\r\n    case STRUCTURE_TERMINAL:\r\n      {\r\n        let outer = [\r\n          [0.0, -0.8],\r\n          [0.55, -0.55],\r\n          [0.8, 0.0],\r\n          [0.55, 0.55],\r\n          [0.0, 0.8],\r\n          [-0.55, 0.55],\r\n          [-0.8, 0.0],\r\n          [-0.55, -0.55],\r\n        ]\r\n        let inner = [\r\n          [0.0, -0.65],\r\n          [0.45, -0.45],\r\n          [0.65, 0.0],\r\n          [0.45, 0.45],\r\n          [0.0, 0.65],\r\n          [-0.45, 0.45],\r\n          [-0.65, 0.0],\r\n          [-0.45, -0.45],\r\n        ]\r\n        outer = relPoly(x, y, outer)\r\n        inner = relPoly(x, y, inner)\r\n        outer.push(outer[0])\r\n        inner.push(inner[0])\r\n        this.poly(outer, {\r\n          fill: colors.dark,\r\n          stroke: colors.outline,\r\n          strokeWidth: 0.05,\r\n          opacity: opts.opacity\r\n        })\r\n        this.poly(inner, {\r\n          fill: colors.light,\r\n          stroke: false,\r\n          opacity: opts.opacity\r\n        })\r\n        this.rect(x - 0.45, y - 0.45, 0.9, 0.9, {\r\n          fill: colors.gray,\r\n          stroke: colors.dark,\r\n          strokeWidth: 0.1,\r\n          opacity: opts.opacity\r\n        })\r\n        break;\r\n      }\r\n    case STRUCTURE_LAB:\r\n      this.circle(x, y - 0.025, {\r\n        radius: 0.55,\r\n        fill: colors.dark,\r\n        stroke: colors.outline,\r\n        strokeWidth: 0.05,\r\n        opacity: opts.opacity\r\n      })\r\n      this.circle(x, y - 0.025, {\r\n        radius: 0.40,\r\n        fill: colors.gray,\r\n        opacity: opts.opacity\r\n      })\r\n      this.rect(x - 0.45, y + 0.3, 0.9, 0.25, {\r\n        fill: colors.dark,\r\n        stroke: false,\r\n        opacity: opts.opacity\r\n      })\r\n      {\r\n        let box = [\r\n          [-0.45, 0.3],\r\n          [-0.45, 0.55],\r\n          [0.45, 0.55],\r\n          [0.45, 0.3],\r\n        ]\r\n        box = relPoly(x, y, box)\r\n        this.poly(box, {\r\n          stroke: colors.outline,\r\n          strokeWidth: 0.05,\r\n          opacity: opts.opacity\r\n        })\r\n      }\r\n      break\r\n    case STRUCTURE_TOWER:\r\n      this.circle(x, y, {\r\n        radius: 0.6,\r\n        fill: colors.dark,\r\n        stroke: colors.outline,\r\n        strokeWidth: 0.05,\r\n        opacity: opts.opacity\r\n      })\r\n      this.rect(x - 0.4, y - 0.3, 0.8, 0.6, {\r\n        fill: colors.gray,\r\n        opacity: opts.opacity\r\n      })\r\n      this.rect(x - 0.2, y - 0.9, 0.4, 0.5, {\r\n        fill: colors.light,\r\n        stroke: colors.dark,\r\n        strokeWidth: 0.07,\r\n        opacity: opts.opacity\r\n      })\r\n      break;\r\n    case STRUCTURE_ROAD:\r\n      this.circle(x, y, {\r\n        radius: 0.175,\r\n        fill: colors.road,\r\n        stroke: false,\r\n        opacity: opts.opacity\r\n      })\r\n      if (!this.roads) this.roads = []\r\n      this.roads.push([x, y])\r\n      break;\r\n    case STRUCTURE_RAMPART:\r\n      this.circle(x, y, {\r\n        radius: 0.65,\r\n        fill: '#434C43',\r\n        stroke: '#5D735F',\r\n        strokeWidth: 0.10,\r\n        opacity: opts.opacity\r\n      })\r\n      break;\r\n    case STRUCTURE_WALL:\r\n      let points = [\r\n        [x - 0.45, y - 0.3],\r\n        [x - 0.3, y - 0.45],\r\n        [x + 0.3, y - 0.45],\r\n        [x + 0.45, y - 0.3],\r\n        [x + 0.45, y + 0.3],\r\n        [x + 0.3, y + 0.45],\r\n        [x - 0.3, y + 0.45],\r\n        [x - 0.45, y + 0.3]\r\n      ]\r\n      this.poly(points, {\r\n        fill: colors.dark,\r\n        stroke: null,\r\n        opacity: opts.opacity\r\n      })\r\n      break;\r\n    case STRUCTURE_STORAGE:\r\n      let outline1 = relPoly(x, y, [\r\n        [-0.45, -0.55],\r\n        [0, -0.65],\r\n        [0.45, -0.55],\r\n        [0.55, 0],\r\n        [0.45, 0.55],\r\n        [0, 0.65],\r\n        [-0.45, 0.55],\r\n        [-0.55, 0],\r\n        [-0.45, -0.55],\r\n      ])\r\n      this.poly(outline1, {\r\n        stroke: colors.outline,\r\n        strokeWidth: 0.05,\r\n        fill: colors.dark,\r\n        opacity: opts.opacity\r\n      })\r\n      this.rect(x - 0.35, y - 0.45, 0.7, 0.9, {\r\n        fill: colors.energy,\r\n        opacity: opts.opacity,\r\n      })\r\n      break;\r\n    case STRUCTURE_OBSERVER:\r\n      this.circle(x, y, {\r\n        fill: colors.dark,\r\n        radius: 0.45,\r\n        stroke: colors.outline,\r\n        strokeWidth: 0.05,\r\n        opacity: opts.opacity\r\n      })\r\n      this.circle(x + 0.225, y, {\r\n        fill: colors.outline,\r\n        radius: 0.20,\r\n        opacity: opts.opacity\r\n      })\r\n      break;\r\n    case STRUCTURE_NUKER:\r\n      let outline = [\r\n        [0, -1],\r\n        [-0.47, 0.2],\r\n        [-0.5, 0.5],\r\n        [0.5, 0.5],\r\n        [0.47, 0.2],\r\n        [0, -1],\r\n      ];\r\n      outline = relPoly(x, y, outline)\r\n      this.poly(outline, {\r\n        stroke: colors.outline,\r\n        strokeWidth: 0.05,\r\n        fill: colors.dark,\r\n        opacity: opts.opacity\r\n      })\r\n      let inline = [\r\n        [0, -.80],\r\n        [-0.40, 0.2],\r\n        [0.40, 0.2],\r\n        [0, -.80],\r\n      ]\r\n      inline = relPoly(x, y, inline)\r\n      this.poly(inline, {\r\n        stroke: colors.outline,\r\n        strokeWidth: 0.01,\r\n        fill: colors.gray,\r\n        opacity: opts.opacity\r\n      })\r\n      break;\r\n    case STRUCTURE_CONTAINER:\r\n      this.rect(x - 0.225, y - 0.3, 0.45, 0.6, {\r\n        fill: colors.gray,\r\n        opacity: opts.opacity,\r\n        stroke: colors.dark,\r\n        strokeWidth: 0.09,\r\n      })\r\n      this.rect(x - 0.17, y + 0.07, 0.34, 0.2, {\r\n        fill: colors.energy,\r\n        opacity: opts.opacity,\r\n      })\r\n      break;\r\n    default:\r\n      this.circle(x, y, {\r\n        fill: colors.light,\r\n        radius: 0.35,\r\n        stroke: colors.dark,\r\n        strokeWidth: 0.20,\r\n        opacity: opts.opacity\r\n      })\r\n      break;\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\nconst dirs = [\r\n  [],\r\n  [0, -1],\r\n  [1, -1],\r\n  [1, 0],\r\n  [1, 1],\r\n  [0, 1],\r\n  [-1, 1],\r\n  [-1, 0],\r\n  [-1, -1]\r\n]\r\n\r\nRoomVisual.prototype.connectRoads = function (opts = {}) {\r\n  let color = opts.color || colors.road || 'white'\r\n  if (!this.roads) return\r\n  this.roads.forEach(r => {\r\n    for (let i = 1; i <= 4; i++) {\r\n      let d = dirs[i]\r\n      let c = [r[0] + d[0], r[1] + d[1]]\r\n      let rd = _.some(this.roads, r => r[0] == c[0] && r[1] == c[1])\r\n      if (rd) {\r\n        this.line(r[0], r[1], c[0], c[1], {\r\n          color: color,\r\n          width: 0.35,\r\n          opacity: opts.opacity || 1\r\n        })\r\n      }\r\n    }\r\n  })\r\n\r\n  return this;\r\n}\r\n\r\n\r\nRoomVisual.prototype.speech = function (text, x, y, opts = {}) {\r\n  var background = !!opts.background ? opts.background : colors.speechBackground\r\n  var textcolor = !!opts.textcolor ? opts.textcolor : colors.speechText\r\n  var textstyle = !!opts.textstyle ? opts.textstyle : false\r\n  var textsize = !!opts.textsize ? opts.textsize : speechSize\r\n  var textfont = !!opts.textfont ? opts.textfont : speechFont\r\n  var opacity = !!opts.opacity ? opts.opacity : 1\r\n\r\n  var fontstring = ''\r\n  if (textstyle) {\r\n    fontstring = textstyle + ' '\r\n  }\r\n  fontstring += textsize + ' ' + textfont\r\n\r\n  let pointer = [\r\n    [-0.2, -0.8],\r\n    [0.2, -0.8],\r\n    [0, -0.3]\r\n  ]\r\n  pointer = relPoly(x, y, pointer)\r\n  pointer.push(pointer[0])\r\n\r\n  this.poly(pointer, {\r\n    fill: background,\r\n    stroke: background,\r\n    opacity: opacity,\r\n    strokeWidth: 0.0\r\n  })\r\n\r\n  this.text(text, x, y - 1, {\r\n    color: textcolor,\r\n    backgroundColor: background,\r\n    backgroundPadding: 0.1,\r\n    opacity: opacity,\r\n    font: fontstring\r\n  })\r\n\r\n  return this;\r\n}\r\n\r\n\r\nRoomVisual.prototype.animatedPosition = function (x, y, opts = {}) {\r\n\r\n  let color = !!opts.color ? opts.color : 'blue'\r\n  let opacity = !!opts.opacity ? opts.opacity : 0.5\r\n  let radius = !!opts.radius ? opts.radius : 0.75\r\n  let frames = !!opts.frames ? opts.frames : 6\r\n\r\n\r\n  let angle = (Game.time % frames * 90 / frames) * (Math.PI / 180);\r\n  let s = Math.sin(angle);\r\n  let c = Math.cos(angle);\r\n\r\n  let sizeMod = Math.abs(Game.time % frames - frames / 2) / 10;\r\n  radius += radius * sizeMod;\r\n\r\n  let points = [\r\n    rotate(0, -radius, s, c, x, y),\r\n    rotate(radius, 0, s, c, x, y),\r\n    rotate(0, radius, s, c, x, y),\r\n    rotate(-radius, 0, s, c, x, y),\r\n    rotate(0, -radius, s, c, x, y),\r\n  ];\r\n\r\n  this.poly(points, { stroke: color, opacity: opacity });\r\n\r\n  return this;\r\n}\r\n\r\nfunction rotate(x, y, s, c, px, py) {\r\n  let xDelta = x * c - y * s;\r\n  let yDelta = x * s + y * c;\r\n  return { x: px + xDelta, y: py + yDelta };\r\n}\r\n\r\n\r\nfunction relPoly(x, y, poly) {\r\n  return poly.map(p => {\r\n    p[0] += x\r\n    p[1] += y\r\n    return p\r\n  })\r\n}\r\n\r\nRoomVisual.prototype.test = function test() {\r\n  let demopos = [19, 24]\r\n  this.clear()\r\n  this.structure(demopos[0] + 0, demopos[1] + 0, STRUCTURE_LAB)\r\n  this.structure(demopos[0] + 1, demopos[1] + 1, STRUCTURE_TOWER)\r\n  this.structure(demopos[0] + 2, demopos[1] + 0, STRUCTURE_LINK)\r\n  this.structure(demopos[0] + 3, demopos[1] + 1, STRUCTURE_TERMINAL)\r\n  this.structure(demopos[0] + 4, demopos[1] + 0, STRUCTURE_EXTENSION)\r\n  this.structure(demopos[0] + 5, demopos[1] + 1, STRUCTURE_SPAWN)\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/// #region RESOURCE BADGES\r\nconst ColorSets = {\r\n  white: [\"#ffffff\", \"#4c4c4c\"],\r\n  grey: [\"#b4b4b4\", \"#4c4c4c\"],\r\n  red: [\"#ff7b7b\", \"#592121\"],\r\n  yellow: [\"#fdd388\", \"#5d4c2e\"],\r\n  green: [\"#00f4a2\", \"#236144\"],\r\n  blue: [\"#50d7f9\", \"#006181\"],\r\n  purple: [\"#a071ff\", \"#371383\"],\r\n};\r\nconst ResourceColors = {\r\n  [RESOURCE_ENERGY]: ColorSets.yellow,\r\n  [RESOURCE_POWER]: ColorSets.red,\r\n\r\n  [RESOURCE_HYDROGEN]: ColorSets.grey,\r\n  [RESOURCE_OXYGEN]: ColorSets.grey,\r\n  [RESOURCE_UTRIUM]: ColorSets.blue,\r\n  [RESOURCE_LEMERGIUM]: ColorSets.green,\r\n  [RESOURCE_KEANIUM]: ColorSets.purple,\r\n  [RESOURCE_ZYNTHIUM]: ColorSets.yellow,\r\n  [RESOURCE_CATALYST]: ColorSets.red,\r\n  [RESOURCE_GHODIUM]: ColorSets.white,\r\n\r\n  [RESOURCE_HYDROXIDE]: ColorSets.grey,\r\n  [RESOURCE_ZYNTHIUM_KEANITE]: ColorSets.grey,\r\n  [RESOURCE_UTRIUM_LEMERGITE]: ColorSets.grey,\r\n\r\n  [RESOURCE_UTRIUM_HYDRIDE]: ColorSets.blue,\r\n  [RESOURCE_UTRIUM_OXIDE]: ColorSets.blue,\r\n  [RESOURCE_KEANIUM_HYDRIDE]: ColorSets.purple,\r\n  [RESOURCE_KEANIUM_OXIDE]: ColorSets.purple,\r\n  [RESOURCE_LEMERGIUM_HYDRIDE]: ColorSets.green,\r\n  [RESOURCE_LEMERGIUM_OXIDE]: ColorSets.green,\r\n  [RESOURCE_ZYNTHIUM_HYDRIDE]: ColorSets.yellow,\r\n  [RESOURCE_ZYNTHIUM_OXIDE]: ColorSets.yellow,\r\n  [RESOURCE_GHODIUM_HYDRIDE]: ColorSets.white,\r\n  [RESOURCE_GHODIUM_OXIDE]: ColorSets.white,\r\n\r\n  [RESOURCE_UTRIUM_ACID]: ColorSets.blue,\r\n  [RESOURCE_UTRIUM_ALKALIDE]: ColorSets.blue,\r\n  [RESOURCE_KEANIUM_ACID]: ColorSets.purple,\r\n  [RESOURCE_KEANIUM_ALKALIDE]: ColorSets.purple,\r\n  [RESOURCE_LEMERGIUM_ACID]: ColorSets.green,\r\n  [RESOURCE_LEMERGIUM_ALKALIDE]: ColorSets.green,\r\n  [RESOURCE_ZYNTHIUM_ACID]: ColorSets.yellow,\r\n  [RESOURCE_ZYNTHIUM_ALKALIDE]: ColorSets.yellow,\r\n  [RESOURCE_GHODIUM_ACID]: ColorSets.white,\r\n  [RESOURCE_GHODIUM_ALKALIDE]: ColorSets.white,\r\n\r\n  [RESOURCE_CATALYZED_UTRIUM_ACID]: ColorSets.blue,\r\n  [RESOURCE_CATALYZED_UTRIUM_ALKALIDE]: ColorSets.blue,\r\n  [RESOURCE_CATALYZED_KEANIUM_ACID]: ColorSets.purple,\r\n  [RESOURCE_CATALYZED_KEANIUM_ALKALIDE]: ColorSets.purple,\r\n  [RESOURCE_CATALYZED_LEMERGIUM_ACID]: ColorSets.green,\r\n  [RESOURCE_CATALYZED_LEMERGIUM_ALKALIDE]: ColorSets.green,\r\n  [RESOURCE_CATALYZED_ZYNTHIUM_ACID]: ColorSets.yellow,\r\n  [RESOURCE_CATALYZED_ZYNTHIUM_ALKALIDE]: ColorSets.yellow,\r\n  [RESOURCE_CATALYZED_GHODIUM_ACID]: ColorSets.white,\r\n  [RESOURCE_CATALYZED_GHODIUM_ALKALIDE]: ColorSets.white,\r\n};\r\n\r\nconst MINERALS = [\r\n  RESOURCE_CATALYST,\r\n  RESOURCE_HYDROGEN,\r\n  RESOURCE_OXYGEN,\r\n  RESOURCE_LEMERGIUM,\r\n  RESOURCE_UTRIUM,\r\n  RESOURCE_ZYNTHIUM,\r\n  RESOURCE_KEANIUM\r\n]\r\n\r\nRoomVisual.prototype.resource = function (type, x, y, size = 0.25) {\r\n  if (type == RESOURCE_ENERGY || type == RESOURCE_POWER)\r\n    this._fluid(type, x, y, size);\r\n  else if (MINERALS.includes(type))\r\n    this._mineral(type, x, y, size);\r\n  else if (ResourceColors[type] != undefined)\r\n    this._compound(type, x, y, size);\r\n  else\r\n    return ERR_INVALID_ARGS\r\n  return OK;\r\n};\r\nRoomVisual.prototype._fluid = function (type, x, y, size = 0.25) {\r\n  this.circle(x, y, {\r\n    radius: size,\r\n    fill: ResourceColors[type][0],\r\n    opacity: 1,\r\n  })\r\n  this.text(type[0], x, y - (size * 0.1), {\r\n    font: (size * 1.5),\r\n    color: ResourceColors[type][1],\r\n    backgroundColor: ResourceColors[type][0],\r\n    backgroundPadding: 0,\r\n  })\r\n};\r\nRoomVisual.prototype._mineral = function (type, x, y, size = 0.25) {\r\n  this.circle(x, y, {\r\n    radius: size,\r\n    fill: ResourceColors[type][0],\r\n    opacity: 1,\r\n  })\r\n  this.circle(x, y, {\r\n    radius: size * 0.8,\r\n    fill: ResourceColors[type][1],\r\n    opacity: 1,\r\n  })\r\n  this.text(type, x, y + (size * 0.03), {\r\n    font: \"bold \" + (size * 1.25) + \" arial\",\r\n    color: ResourceColors[type][0],\r\n    backgroundColor: ResourceColors[type][1],\r\n    backgroundPadding: 0,\r\n  })\r\n};\r\nRoomVisual.prototype._compound = function (type, x, y, size = 0.25) {\r\n  let label = type.replace(\"2\", '₂');\r\n\r\n  this.text(label, x, y, {\r\n    font: \"bold \" + (size * 1) + \" arial\",\r\n    color: ResourceColors[type][1],\r\n    backgroundColor: ResourceColors[type][0],\r\n    backgroundPadding: 0.3 * size,\r\n  })\r\n};\r\n  /// #endregion\r\n","export const isFull = c => c.store[RESOURCE_ENERGY] === c.store.getCapacity(RESOURCE_ENERGY)\r\nexport const isNotFull = c => c.store[RESOURCE_ENERGY] !== c.store.getCapacity(RESOURCE_ENERGY)\r\nexport const isEmpty = c => c.store.getFreeCapacity(RESOURCE_ENERGY) === c.store.getCapacity(RESOURCE_ENERGY)\r\nexport const isNotEmpty = c => c.store.getFreeCapacity(RESOURCE_ENERGY) !== 0","/**\n * @example \n * const result = find_harvester_parts(40, 550, true)\n * \n * @param {number} distance Distance between storage/spawn and energy node\n * @param {number} max_production_cost Maximum available energy to create a creep\n * @param {boolean} use_road Creeps will stay on roads\n */\nexport function findHarvesterParts(distance, max_production_cost, use_road = false) {\n    const lifetime = CREEP_LIFE_TIME\n    const ticks_travelling = distance * 2\n\n    let best_energy_ratio = 0\n    let best_parts = null\n\n    for (let parts_work = 1; parts_work < 25; parts_work++) {\n        for (let parts_carry = 1; parts_carry < 25; parts_carry++) {\n            const parts_move = (use_road)\n                ? Math.ceil((parts_work + parts_carry) / 2)\n                : parts_work + parts_carry\n            \n            if (parts_work + parts_carry + parts_move > 50) {\n                break\n            }\n\n            const production_cost = parts_work * 100 + parts_carry * 50 + parts_move * 50\n            \n            if (production_cost > max_production_cost) {\n                break\n            }\n\n            const carry_capacity = parts_carry * 50\n            const ticks_refilling = carry_capacity / 2 / parts_work\n            const total_gathered = (lifetime / (ticks_travelling + ticks_refilling)) * carry_capacity\n            const energy_ratio = total_gathered / production_cost\n\n            if (energy_ratio > best_energy_ratio) {\n                best_energy_ratio = energy_ratio\n                best_parts = {\n                    work: parts_work,\n                    carry: parts_carry,\n                    move: parts_move\n                }\n            }\n        }\n    }\n\n    const final_parts = [\n        Array(best_parts.work).fill(WORK),\n        Array(best_parts.carry).fill(CARRY),\n        Array(best_parts.move).fill(MOVE),\n    ].flat()\n\n    return {\n        ratio: best_energy_ratio,\n        parts: final_parts,\n        roads: use_road\n    }\n}\n","export const sin = Math.sin\r\nexport const cos = Math.cos\r\nexport const tan = Math.tan\r\nexport const atan2 = Math.atan2\r\n\r\nexport function random(min = 0, max = 1) {\r\n    return Math.random() * (max-min) + min\r\n}\r\n\r\nexport function randomInt(min, max) {\r\n    return Math.round(Math.random() * (max-min) + min)\r\n}","import { randomInt } from './math'\r\n\r\nconst SINGLE_VOWEL_FREQUENCY = 40\r\nconst CONSONANT_VOWEL_FREQUENCY = 3\r\nconst TWO_CONSONANT_VOWEL_FREQUENCY = 1\r\n\r\nexport default {\r\n    generate(prefix = null, suffix = null) {\r\n        let name = \"\"\r\n\r\n        const vowels = 'aeiouy'.split('')\r\n        const consonants = 'bcdfghjklmnpqrstvwxz'.split('')\r\n        const second_consonants = 'hlr'\r\n\r\n        let syllables = []\r\n\r\n        // single vowels\r\n        for (let i = 0; i < SINGLE_VOWEL_FREQUENCY; i++) {\r\n            syllables = syllables.concat(vowels)\r\n        }\r\n\r\n        // consonant-vowel\r\n        for (const consonant of consonants) {\r\n            for (const vowel of vowels) {\r\n                for (let i = 0; i < CONSONANT_VOWEL_FREQUENCY; i++) {\r\n                    syllables.push(consonant + vowel)\r\n                    syllables.push(consonant + vowel)\r\n                }\r\n            }\r\n        }\r\n\r\n        // consonant-consonant-vowel\r\n        for (const consonant of consonants) {\r\n            for (const consonant2 of second_consonants) {\r\n                for (const vowel of vowels) {\r\n                    for (let i = 0; i < TWO_CONSONANT_VOWEL_FREQUENCY; i++) {\r\n                        syllables.push(consonant + consonant2 + vowel)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const n_syllables = randomInt(2, 3)\r\n\r\n        for (let i = 0; i < n_syllables; i++) {\r\n            name += syllables[Math.floor(Math.random() * syllables.length)]\r\n        }\r\n\r\n        const capitalized_name = name.charAt(0).toUpperCase() + name.slice(1)\r\n\r\n        return (prefix || \"\") + capitalized_name + (suffix || \"\")\r\n    }\r\n}","export const Roles = {\n    Miner: \"miner\",\n    Carrier: \"carrier\",\n    Multitasker: \"multitasker\"\n}","import { isFull, isEmpty, isNotFull, isNotEmpty } from '../helpers/containers'\r\nimport { findHarvesterParts } from '../helpers/findHarvesterParts'\r\nimport nameGenerator from '../helpers/nameGenerator'\r\nimport { Roles } from '../constants'\r\n\r\nconst TASK = {\r\n    REFILL: \"refill\",\r\n    SPEND: \"spend\",\r\n}\r\n\r\nexport default {\r\n    run(c) {\r\n        if (isEmpty(c) && c.memory.task !== TASK.REFILL) {\r\n            c.memory.task = TASK.REFILL\r\n            c.memory.task_target = c.room.find(FIND_SOURCES_ACTIVE).sort((a,b) => {\r\n                return 0.5 - Math.random()\r\n            })[0].id\r\n        }\r\n\r\n        const need_new_target = c.memory.task_target === null || Game.getObjectById(c.memory.task_target) === null\r\n\r\n        if (isFull(c) || need_new_target) {\r\n            defineSpendTarget(c.room, c)\r\n        }\r\n\r\n        if (c.memory.task === TASK.SPEND) {\r\n            doSpendTarget(c.room, c)\r\n\r\n        } else if (c.memory.task === TASK.REFILL) {\r\n            doRefillTarget(c.room, c)\r\n        }\r\n    },\r\n\r\n    create(room, limited_parts = false) {\r\n        const parts = (limited_parts)\r\n            ? findHarvesterParts(27, Math.max(300, room.energyAvailable), false).parts\r\n            : findHarvesterParts(27, room.energyCapacityAvailable, false).parts\r\n\r\n        const name = nameGenerator.generate(null, \"   ✦\")\r\n        const options = {\r\n            memory: {\r\n                role: Roles.Multitasker,\r\n                task: TASK.REFILL,\r\n                task_target: null,\r\n            }\r\n        }\r\n\r\n        return { name, parts, options }\r\n    }\r\n\r\n}\r\n\r\nfunction defineSpendTarget(room, c) {\r\n    c.memory.task = TASK.SPEND\r\n\r\n    if (room.controller.ticksToDowngrade < 750) {\r\n        c.memory.task_target = c.room.controller.id\r\n        \r\n    } else {\r\n        const spawn = Object.values(Game.spawns)[0]\r\n        \r\n        const sites = room.find(FIND_CONSTRUCTION_SITES).sort((a, b) => {\r\n            (a.progress / a.progressTotal) - (b.progress / b.progressTotal)\r\n        })\r\n        \r\n        const towers = room.find(FIND_MY_STRUCTURES, { filter: { structureType: STRUCTURE_TOWER }})\r\n            .filter(tower => !isFull(tower))\r\n        \r\n        const extensions = room.find(FIND_MY_STRUCTURES, { filter: { structureType: STRUCTURE_EXTENSION }})\r\n            .filter(extension => isNotFull(extension))\r\n\r\n        if (! isFull(spawn)) {\r\n            c.memory.task_target = spawn.id\r\n        } else if (towers.length) {\r\n            c.memory.task_target = c.pos.findClosestByRange(towers).id\r\n        } else if (extensions.length) {\r\n            c.memory.task_target = extensions[0].id//c.pos.findClosestByPath(extensions).id\r\n        } else if (sites.length) {\r\n            c.memory.task_target = sites[0].id\r\n        } else {\r\n            c.memory.task_target = c.room.controller.id \r\n        }\r\n    }\r\n}\r\n\r\nfunction doSpendTarget(room, c) {\r\n    const target = Game.getObjectById(c.memory.task_target)\r\n\r\n    c.moveTo(target)\r\n                \r\n    // controller\r\n    if (target.structureType === STRUCTURE_CONTROLLER) {\r\n        c.upgradeController(target)\r\n\r\n    // Construction site\r\n    } else if (target.progress !== undefined) {\r\n        c.build(target)\r\n\r\n    // Refillable structure\r\n    } else if ([STRUCTURE_SPAWN, STRUCTURE_EXTENSION, STRUCTURE_TOWER].includes(target.structureType)) {\r\n        c.transfer(target, RESOURCE_ENERGY)\r\n        if (isFull(target)) {\r\n            c.memory.task_target = null\r\n        }\r\n    }\r\n}\r\n\r\nfunction doRefillTarget(room, c) {\r\n    const target = Game.getObjectById(c.memory.task_target)\r\n\r\n    c.moveTo(target)\r\n    c.harvest(target)\r\n}","export default {\r\n    run(room_name) {\r\n        const room = Game.rooms[room_name]\r\n\r\n        const towers = room.find(FIND_MY_STRUCTURES, { filter: { structureType: STRUCTURE_TOWER }})\r\n        const damaged_creeps = room.find(FIND_MY_CREEPS).filter(c => c.hits < c.hitsMax)\r\n        const ennemies = room.find(FIND_HOSTILE_CREEPS)\r\n\r\n        for (const tower of towers) {\r\n            if (ennemies.length) {\r\n                tower.attack(ennemies[0])\r\n            } else if (damaged_creeps.length) {\r\n                tower.heal(damaged_creeps[0])\r\n            }\r\n        }\r\n    }\r\n}","// {\"name\":\"textExport\",\"shard\":\"shard0\",\"rcl\":\"8\",\"buildings\":{\"constructedWall\":{\"pos\":[{\"x\":8,\"y\":10},{\"x\":9,\"y\":10},{\"x\":10,\"y\":10},{\"x\":11,\"y\":10},{\"x\":21,\"y\":10},{\"x\":22,\"y\":10},{\"x\":23,\"y\":10},{\"x\":24,\"y\":10},{\"x\":8,\"y\":11},{\"x\":11,\"y\":11},{\"x\":18,\"y\":11},{\"x\":21,\"y\":11},{\"x\":24,\"y\":11},{\"x\":8,\"y\":12},{\"x\":11,\"y\":12},{\"x\":12,\"y\":12},{\"x\":13,\"y\":12},{\"x\":14,\"y\":12},{\"x\":15,\"y\":12},{\"x\":16,\"y\":12},{\"x\":17,\"y\":12},{\"x\":18,\"y\":12},{\"x\":21,\"y\":12},{\"x\":24,\"y\":12},{\"x\":8,\"y\":13},{\"x\":9,\"y\":13},{\"x\":22,\"y\":13},{\"x\":23,\"y\":13},{\"x\":24,\"y\":13},{\"x\":9,\"y\":14},{\"x\":22,\"y\":14},{\"x\":9,\"y\":15},{\"x\":22,\"y\":15},{\"x\":9,\"y\":16},{\"x\":22,\"y\":16},{\"x\":9,\"y\":17},{\"x\":22,\"y\":17},{\"x\":9,\"y\":18},{\"x\":22,\"y\":18},{\"x\":9,\"y\":19},{\"x\":22,\"y\":19},{\"x\":9,\"y\":20},{\"x\":22,\"y\":20},{\"x\":9,\"y\":21},{\"x\":22,\"y\":21},{\"x\":9,\"y\":22},{\"x\":22,\"y\":22},{\"x\":9,\"y\":23},{\"x\":22,\"y\":23},{\"x\":8,\"y\":24},{\"x\":9,\"y\":24},{\"x\":22,\"y\":24},{\"x\":23,\"y\":24},{\"x\":24,\"y\":24},{\"x\":8,\"y\":25},{\"x\":11,\"y\":25},{\"x\":12,\"y\":25},{\"x\":13,\"y\":25},{\"x\":14,\"y\":25},{\"x\":15,\"y\":25},{\"x\":16,\"y\":25},{\"x\":17,\"y\":25},{\"x\":18,\"y\":25},{\"x\":21,\"y\":25},{\"x\":24,\"y\":25},{\"x\":8,\"y\":26},{\"x\":11,\"y\":26},{\"x\":18,\"y\":26},{\"x\":21,\"y\":26},{\"x\":24,\"y\":26},{\"x\":8,\"y\":27},{\"x\":9,\"y\":27},{\"x\":10,\"y\":27},{\"x\":11,\"y\":27},{\"x\":21,\"y\":27},{\"x\":22,\"y\":27},{\"x\":23,\"y\":27},{\"x\":24,\"y\":27}]},\"tower\":{\"pos\":[{\"x\":9,\"y\":11},{\"x\":22,\"y\":11},{\"x\":23,\"y\":12}]},\"container\":{\"pos\":[{\"x\":23,\"y\":11},{\"x\":9,\"y\":12}]},\"extension\":{\"pos\":[{\"x\":11,\"y\":13},{\"x\":12,\"y\":13},{\"x\":13,\"y\":13},{\"x\":14,\"y\":13},{\"x\":15,\"y\":13},{\"x\":16,\"y\":13},{\"x\":17,\"y\":13},{\"x\":10,\"y\":14},{\"x\":10,\"y\":15},{\"x\":12,\"y\":15},{\"x\":13,\"y\":15},{\"x\":14,\"y\":15},{\"x\":15,\"y\":15},{\"x\":16,\"y\":15},{\"x\":17,\"y\":15},{\"x\":10,\"y\":16},{\"x\":12,\"y\":16},{\"x\":13,\"y\":16},{\"x\":14,\"y\":16},{\"x\":15,\"y\":16},{\"x\":16,\"y\":16},{\"x\":17,\"y\":16},{\"x\":10,\"y\":17},{\"x\":10,\"y\":18},{\"x\":11,\"y\":18},{\"x\":12,\"y\":18},{\"x\":13,\"y\":18},{\"x\":14,\"y\":18},{\"x\":15,\"y\":18},{\"x\":16,\"y\":18},{\"x\":10,\"y\":19},{\"x\":11,\"y\":19},{\"x\":12,\"y\":19},{\"x\":13,\"y\":19},{\"x\":14,\"y\":19},{\"x\":15,\"y\":19},{\"x\":16,\"y\":19},{\"x\":10,\"y\":20},{\"x\":10,\"y\":21},{\"x\":12,\"y\":21},{\"x\":13,\"y\":21},{\"x\":14,\"y\":21},{\"x\":15,\"y\":21},{\"x\":16,\"y\":21},{\"x\":17,\"y\":21},{\"x\":10,\"y\":22},{\"x\":12,\"y\":22},{\"x\":13,\"y\":22},{\"x\":14,\"y\":22},{\"x\":15,\"y\":22},{\"x\":16,\"y\":22},{\"x\":17,\"y\":22},{\"x\":10,\"y\":23},{\"x\":11,\"y\":24},{\"x\":12,\"y\":24},{\"x\":13,\"y\":24},{\"x\":14,\"y\":24},{\"x\":15,\"y\":24},{\"x\":16,\"y\":24},{\"x\":17,\"y\":24}]},\"spawn\":{\"pos\":[{\"x\":21,\"y\":14},{\"x\":21,\"y\":16},{\"x\":21,\"y\":23}]},\"storage\":{\"pos\":[{\"x\":21,\"y\":18}]},\"link\":{\"pos\":[{\"x\":21,\"y\":19}]},\"powerSpawn\":{\"pos\":[{\"x\":21,\"y\":21}]}}}\r\n\r\nconst layout = `\r\n■ ■ ■ ■                   ■ ■ ■ ■\r\n■ T3. ■             ■ ↓ ↑ ■ T1C1■\r\n■ C3. ■ ■ ■ ■ ■ ■ ■ ■ ↓ ↑ ■ . T5■\r\n■ ■ . ● ● ● ● ● ● ● . ↓ ↑ . ■ ■ ■\r\n  ■ ● ↓ ← ← ← ← ← ← . ↓ ↑ S1■\r\n  ■ ● ↓ ● ● ● ● ● ● . ↓ ↑ . ■\r\n  ■ ● ↓ ● ● ● ● ● ● . ↓ ↑ S2■\r\n  ■ ● → → → → → → → . ↓ ↑ . ■\r\n  ■ ● ● ● ● ● ● ● ● . ↓ ↑ ST■\r\n  ■ ● ● ● ● ● ● ● ● . ↓ ↑ L1■\r\n  ■ ● ↓ ← ← ← ← ← ← . ↓ ↑ . ■\r\n  ■ ● ↓ ● ● ● ● ● ● . ↓ ↑ PS■\r\n  ■ ● ↓ ● ● ● ● ● ● . ↓ ↑ . ■\r\n  ■ ● → → → → → → → . ↓ ↑ S3■\r\n■ ■ . ● ● ● ● ● ● ● . ↓ ↑ . ■ ■ ■\r\n■ C4. ■ ■ ■ ■ ■ ■ ■ ■ ↓ ↑ ■ . T2■\r\n■ T4. ■             ■ ↓ ↑ ■ T6C2■\r\n■ ■ ■ ■                   ■ ■ ■ ■\r\n`\r\nexport default {\r\n\r\n    createConstructionSites(room_name, corner, visualizeOnly = false) {\r\n        const visual = new RoomVisual(room_name)\r\n        const buildings = this.getLayoutBuildings()\r\n\r\n        for (const b of buildings) {\r\n            const x = corner.x + b.x\r\n            const y = corner.y + b.y\r\n\r\n            if (visualizeOnly) {\r\n                visual.structure(x, y, b.type, { opacity: 0.2 })\r\n            } else {\r\n                Game.rooms[room_name].createConstructionSite(x, y, b.type)\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    visualizeConstructionSites(room_name, corner) {\r\n        this.createConstructionSites(room_name, corner, true)\r\n    },\r\n\r\n    clearConstructionSites(room_name) {\r\n        const sites = Game.rooms[room_name].find(FIND_CONSTRUCTION_SITES)\r\n\r\n        for (const site of sites) { \r\n            site.remove()\r\n        }\r\n    },\r\n\r\n    getLayoutBuildings() {\r\n        const lines = layout.split(\"\\n\").slice(1,-1)\r\n        \r\n        const lines_with_buildings = lines.map((line, y) => {\r\n            return line.match(/.{1,2}/g)\r\n                .map(str => str.trim())\r\n                .map((str, x) => this.getBuildingBySymbol(str, x, y))\r\n                .filter(building => building !== null)\r\n        })\r\n        \r\n        const buildings = lines_with_buildings.flat()\r\n            .sort((a, b) => a.priority - b.priority)\r\n\r\n        return buildings\r\n    },\r\n\r\n    getBuildingBySymbol(str, x, y) {\r\n        let building = null\r\n\r\n        switch (str) {\r\n            case '■': building = { type: STRUCTURE_WALL, priority: x + y * 100 }; break\r\n\r\n            case '●': building = { type: STRUCTURE_EXTENSION, priority: x + y * 100 }; break\r\n\r\n            // case 'C1': building = { type: STRUCTURE_CONTAINER, priority: 1 }; break\r\n            // case 'C2': building = { type: STRUCTURE_CONTAINER, priority: 2 }; break\r\n            // case 'C3': building = { type: STRUCTURE_CONTAINER, priority: 3 }; break\r\n            // case 'C4': building = { type: STRUCTURE_CONTAINER, priority: 4 }; break\r\n            // case 'C5': building = { type: STRUCTURE_CONTAINER, priority: 5 }; break\r\n\r\n            case 'T1': building = { type: STRUCTURE_TOWER, priority: 1 }; break\r\n            case 'T2': building = { type: STRUCTURE_TOWER, priority: 2 }; break\r\n            case 'T3': building = { type: STRUCTURE_TOWER, priority: 3 }; break\r\n            case 'T4': building = { type: STRUCTURE_TOWER, priority: 4 }; break\r\n            case 'T5': building = { type: STRUCTURE_TOWER, priority: 5 }; break\r\n            case 'T6': building = { type: STRUCTURE_TOWER, priority: 6 }; break\r\n\r\n            case 'S1': building = { type: STRUCTURE_SPAWN, priority: 1 }; break\r\n            case 'S2': building = { type: STRUCTURE_SPAWN, priority: 2 }; break\r\n            case 'S3': building = { type: STRUCTURE_SPAWN, priority: 3 }; break\r\n\r\n            case 'PS': building = { type: STRUCTURE_POWER_SPAWN, priority: 1 }; break\r\n\r\n            case 'ST': building = { type: STRUCTURE_STORAGE, priority: 1 }; break\r\n\r\n            case 'L1': building = { type: STRUCTURE_LINK, priority: 1 }; break\r\n            case 'L2': building = { type: STRUCTURE_LINK, priority: 2 }; break\r\n            case 'L3': building = { type: STRUCTURE_LINK, priority: 3 }; break\r\n            case 'L4': building = { type: STRUCTURE_LINK, priority: 4 }; break\r\n            case 'L5': building = { type: STRUCTURE_LINK, priority: 5 }; break\r\n            case 'L6': building = { type: STRUCTURE_LINK, priority: 6 }; break\r\n\r\n            // case '.': building = { type: STRUCTURE_ROAD, priority: 1 }; break\r\n            // case '↑': building = { type: STRUCTURE_ROAD, priority: 1 }; break\r\n            // case '→': building = { type: STRUCTURE_ROAD, priority: 1 }; break\r\n            // case '↓': building = { type: STRUCTURE_ROAD, priority: 1 }; break\r\n            // case '←': building = { type: STRUCTURE_ROAD, priority: 1 }; break\r\n\r\n            default: building = null\r\n        }\r\n\r\n        if (building !== null) {\r\n            building.x = x\r\n            building.y = y\r\n        }\r\n\r\n        return building\r\n    }\r\n}","import { Roles } from '../constants'\nimport nameGenerator from '../helpers/nameGenerator'\n\nexport default {\n    run(c) {\n        const source = Game.getObjectById(c.memory.source_id)\n        \n        if (c.memory.arrived === false) {\n            const containers = source.pos.findInRange(FIND_MY_STRUCTURES, 1).filter(b => b.structureType === STRUCTURE_CONTAINER)\n            \n            if (containers.length) {\n                if (c.pos.isEqualTo(containers[0].pos)) {\n                    c.memory.arrived = true\n                } else {\n                    c.moveTo(containers[0].pos, { reusePath: 0 })\n                }\n            } else {\n                if (c.pos.inRangeTo(source.pos, 1)) {\n                    c.memory.arrived = true\n                } else {\n                    c.moveTo(source, { reusePath: 0 })\n                }\n            }\n        }\n\n        if (c.memory.arrived) {\n            c.harvest(source)\n        }\n    },\n\n    create(room, source) {\n        const n_move_parts = 2\n        const n_work_parts = 1 //Math.min(6, Math.floor((room.energyCapacityAvailable - (n_move_parts * 50)) / 100))\n        const parts = [\n            Array(n_move_parts).fill(MOVE), \n            Array(n_work_parts).fill(WORK)\n        ].flat()\n\n        return {\n            name: nameGenerator.generate(null, \"  ⛏\"),\n            parts,\n            options: {\n                memory: {\n                    room_name: room.name,\n                    role: Roles.Miner,\n                    source_id: source.id,\n                    arrived: false,\n                }\n            }\n        }\n    }\n}","import { Roles } from './constants'\nimport miner from './roles/miner'\nimport multitasker from './roles/multitasker'\n\nexport default {\n    run(room_name) {\n        const room = Game.rooms[room_name]\n\n        const creeps = Object.values(Game.creeps) //.filter(c => c.memory.room_name === room_name)\n        const sources = room.find(FIND_SOURCES)\n        const buildings = room.find(FIND_MY_STRUCTURES)\n        \n        const spawns = buildings.filter(s => s.structureType === STRUCTURE_SPAWN)\n\n        const multitaskers_to_spawn = createMultitasker(room, creeps)\n        const miners_to_spawn = createMiners(room, creeps, sources)\n\n        const spawn_queue = [multitaskers_to_spawn, miners_to_spawn].flat(2)\n\n        for (let i = 0; i < Math.min(spawns.length, spawn_queue.length); i++) {\n            spawns[i].spawnCreep(spawn_queue[0].parts, spawn_queue[0].name, spawn_queue[0].options);\n        }\n\n        for (const c of creeps) {\n            if (c.memory.role === Roles.Miner) {\n                miner.run(c)\n            } else if (c.memory.role === Roles.Multitasker) {\n                multitasker.run(c)\n            }\n        }\n    }\n}\n\nfunction createMiners(room, creeps, sources) {\n    const miner_creeps = creeps.filter(c => c.memory.role === Roles.Miner)\n    const miner_queue = []\n\n    // for (const source of sources) {\n    //     if (miner_creeps.filter(c => c.memory.source_id === source.id).length) {\n    //         continue\n    //     }\n\n    //     miner_queue.push(miner.create(room, source))\n    // }\n\n    return miner_queue\n}\n\nfunction createMultitasker(room, creeps) {\n    const multitasker_creeps = creeps.filter(c => c.memory.role === Roles.Multitasker)\n    const multitasker_queue = []\n    const limited_parts = creeps.length < 3\n\n    for (let i = 0; i < 7 - multitasker_creeps.length; i++) {\n        multitasker_queue.push(multitasker.create(room, limited_parts))\n    }\n\n    return multitasker_queue\n}","// import './roles/standby'\r\nimport './utils/RoomVisual'\r\nimport multitask from './roles/multitasker'\r\nimport defense from './defense'\r\nimport architect from './architect'\r\nimport spawner from './spawner'\r\n\r\nconst ROOM = 'W3N7'\r\n\r\nfor(var i in Memory.creeps) {\r\n    if(!Game.creeps[i]) {\r\n        delete Memory.creeps[i];\r\n    }\r\n}\r\n\r\ndefense.run(ROOM)\r\nspawner.run(ROOM)\r\n\r\n// architect.clearConstructionSites(ROOM)\r\n// architect.visualizeConstructionSites(ROOM, { x: 27, y: 9 })\r\narchitect.createConstructionSites(ROOM, { x: 27, y: 9 })\r\n"],"names":[],"mappings":"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"}